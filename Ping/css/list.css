/* header 中新增的秒杀图标 */
.header .sk {
    position: absolute;
    left: 185px; 
    top: 40px;

    height: 32px;  
    width: 80px;

    border-left: 1px solid #b1191a;

    /* padding 也要设置在外盒子上 */
    padding: 5px 0 0 15px;
}
.header .sk a {

    /* a本身没有大小，全靠元素撑起来，而这里又是一个 url 撑不起来，所以本身没有宽高。
    父元素即使设置了大小后，a不转为块元素设置大小 也是没有大小的。 */
    display: block;
    height: 32px;

    background: url(../upload/secKill_03.png) no-repeat;

    /* 不显示强调文字 */
    font-size: 0;

    /* 这里的 padding 是不会生效的，因为内容物相当于没有，不知道从哪开始计算 padding，要设置在父容器上 */
    /* padding-left: 10px; */
}


/* 列表页主题盒子 start */
/* 秒杀列表 */
.sk_list li {
    float: left;
    line-height: 45px;      /* 有了行高，可以不用给 height */    
    margin: 0 30px;
}
/* 秒杀列表文字效果 */
.sk_list li a {
    font-size: 16px;
    color: #000;
    font-weight: 700;
}
.sk_list li a:hover {
    color: #b1191a;
}

/* 秒杀商品分类 */
.sk_con li {
    float: left;
    line-height: 45px;
    margin: 0 20px;
}
.sk_con li a {
    font-size: 14px;
    font-weight: 700;
}

/* 秒杀产品列表 */
.sk_bd {
    margin-top: 25px;
}

/* .sk_bd li 和 .sk_goods 是一个东西 */
/* .sk_bd li {
    float: left;
} */
.sk_goods {
    float: left;

    width: 288px;
    height: 458px;

    /* 效果：一开始边框是透明/和背景相同的，然后 hover 变颜色。
    不然如果一开始直接不设置边框，hover 后再加边框就会出现位移。 */
    border: 2px solid transparent;
    box-sizing: border-box;

    position: relative;
    margin: 0 12px 15px 0;
    /* 这样会导致原本正好的四个在一行中装不下了，所以需要通过设置 ul 的宽度变大，然后隐藏超出部分来解决 */
}
.sk_goods:hover {
    border: 2px solid #e12228;
}

.sk_bd ul {
    width: 1212px;
    overflow: hidden;
}

/* 五个产品列表的子样式 */
/* 产品图片 */
.sk_goods_img {
    margin-left: 40px;
    margin-top: 25px;
}

/* 产品标题 */
.sk_goods_title {
    font-size: 14px;
    color: #666;
    font-weight: normal;
    padding: 10px;
}

/* 产品价格 */
.sk_goods_price {
    padding: 3px 10px;
}
.sk_goods_price em {
    font-size: 22px;
    color: #e60012;
}
.sk_goods_price del {
    color: #a4a4a4;
    font-size: 14px;
    font-weight: 700;
}

/* 产品销售额 */
.sk_goods_progress {
    padding: 0 10px;
}
/* 注意了！！！！
这里不要写 em,i ，会被认为是 .sk_good_progress 的 em 和 所有 i，而不是 .sk_good_progress 的 i */
.sk_goods_progress em,
.sk_goods_progress i {
    color: #f24349;
}

/* 销售额进度条 */
.bar {
    /* div 是块级元素，无法直接和文字显示在同一行，也无法定位直接属于父容器的文字（就不能都浮动），所以需要转换为行内块元素 */
    display: inline-block;
    /* 但这样又难以和文字对齐，使用下面语句使得行内块和文字水平居中 */
    vertical-align: middle;

    width: 125px;
    height: 10px;
    border: 1px solid #b1191a;
    border-radius: 5px;     /* 弯曲高度的一半便可以形成圆形 */

    margin: 0 5px;
}
.bar_in {
    height: 10px;       /* 高度必须和父容器保持一致嗷 */
    background-color: #f24349;
    width: 87%;         /* 写百分比是最好的，后续调百分比就能调整进度条了 */
}

/* 立即抢购链接 */
.sk_goods_buy {
    /* 绝对定位到产品列表最底部 */
    position: absolute;
    bottom: 0;

    /* a 行内，转！！！！*/
    /* display: block; */
    /* 记住，有了绝对定位就别转 block 了。还得加上宽度！不然就是 a 本身的大小，占满不了一行。 */

    /* 行内元素进行绝对定位后会变成块级元素，此时加上宽度嗷 */
    width: 100%;            /* 占满整个父容器！！！ */

    height: 50px;
    line-height: 50px;
    background-color: #b1191a;

    color: #fff;
    text-align: center;
    font-size: 20px;

    margin-top: 20px;
}


/* 分页模块 start */
.page {
    /* text-align 只对文本有效，对元素无效，不能设置元素的对齐方式 */
    text-align: center;     /* 文字内容、行内块、行内元素都可以居中对齐 */
    margin: 40px 0;
}
/* 页码 */
.page_num a{
    /* 用 block 就完蛋了，白整 span 行内元素了 */
    display: inline-block;

    width: 36px;
    height: 36px;
    line-height: 36px;
    background-color: #f7f7f7;

    border: 1px solid #ccc;
}
/* 上下页的宽度比较大，需要单独设置 */


/* 注意不是每次设置都要考虑权重，因为这里上下的 .page_num a 和 .page_num .pn_prev 其实指的是一个东西，所以不知道该用哪个，
所以要提升权重（写全层级），以便于覆盖之前设置的样式。 */
/* .page_num 权重是11，.pn_prev 是10，所以记得加上 .page_num 以便于覆盖 */
.page_num .pn_prev,
.page_num .pn_next {
    width: 83px;
}
/* 也不能只写 .current ，权重还是不够 */
/* 当前页和省略页都无需边框 */
.page_num .current,
.page_num .dotted {
    /* 注意这里也不是直接设置边框为 0，而是透明，这样 hover 时不会抖动 */
    border: 1px solid transparent;
    background-color: transparent;
}

/* 输入框和跳转 */
.page_skip input{
    width: 46px;
    height: 36px;

    /* 注意，input 本来就有自己的 2px 的 border，需要覆盖就自己设置 */
    border: 1px solid #ccc;

    /* 输入也居中输入，最左边不好看 */
    text-align: center;

    /* focus 也可以加过渡效果 */
    transition: all 0.1s linear;
}

/* 知识点，表单获取焦点。
当一个页面有很多个输入框，而其实只能有一个输入框获得焦点。
使用 input:focus 来确认表单获取了焦点，就可以和 hover 一样对该元素或者其子元素做行为了。

知识点：outline
outline（轮廓）是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用。
注释：轮廓线不会占据空间，也不一定是矩形。*/

/* 需求：当表单获得焦点，变宽，边框变蓝。 */
.page_skip input:focus {
    width: 88px;
    border: 1px solid skyblue;
}

.page_skip button {
    width: 54px;
    height: 36px;
    border: 1px solid #ccc;
    background-color: #f7f7f7;
}

/* 分页模块 end */


/* 列表页主题盒子 end */

